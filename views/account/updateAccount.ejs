<%- include('../partials/flash-messages') %>

<div class="account-update-container">
  <% if (errors && errors.length > 0) { %>
    <div class="alert alert-danger" role="alert" aria-live="assertive">
      <h2 class="h4">Please correct the following:</h2>
      <ul class="mb-0">
        <% errors.forEach(error => { %>
          <li><%= error.msg %></li>
        <% }) %>
      </ul>
    </div>
  <% } %>

  <header class="account-header">
    <h1><%= title %></h1>
    <p class="welcome-message">Welcome back, <%= locals.accountData.account_firstname %>!</p>
  </header>

  <div class="account-sections">
    <!-- Account Information Update -->
    <section class="update-section" aria-labelledby="account-info-heading">
      <h2 id="account-info-heading">Account Information</h2>
      
      <form action="/account/update" method="post" class="account-form">
        <input type="hidden" name="_csrf" value="<%= csrfToken %>">
        <input type="hidden" name="account_id" value="<%= locals.accountData.account_id %>">
        
        <div class="form-grid">
          <div class="form-group">
            <label for="account_firstname" class="form-label">First Name</label>
            <input 
              type="text" 
              id="account_firstname" 
              name="account_firstname" 
              class="form-input"
              value="<%= locals.accountData.account_firstname %>" 
              required
              pattern="[A-Za-zÀ-ÿ\- ]{2,}"
              title="Please enter only letters (2+ characters)"
              autocomplete="given-name"
            >
          </div>

          <div class="form-group">
            <label for="account_lastname" class="form-label">Last Name</label>
            <input 
              type="text" 
              id="account_lastname" 
              name="account_lastname" 
              class="form-input"
              value="<%= locals.accountData.account_lastname %>" 
              required
              pattern="[A-Za-zÀ-ÿ\- ]{2,}"
              title="Please enter only letters (2+ characters)"
              autocomplete="family-name"
            >
          </div>

          <div class="form-group">
            <label for="account_email" class="form-label">Email Address</label>
            <input 
              type="email" 
              id="account_email" 
              name="account_email" 
              class="form-input"
              value="<%= locals.accountData.account_email %>" 
              required
              autocomplete="email"
            >
          </div>
        </div>

        <button type="submit" class="btn btn-primary">Update Information</button>
      </form>
    </section>

    <!-- Password Update -->
    <section class="update-section" aria-labelledby="password-change-heading">
      <h2 id="password-change-heading">Change Password</h2>
      
      <div class="password-instructions">
        <p>For security, your new password must meet these requirements:</p>
        <ul class="password-requirements" aria-label="Password requirements">
          <li data-requirement="length">At least 12 characters</li>
          <li data-requirement="uppercase">1 uppercase letter</li>
          <li data-requirement="number">1 number</li>
          <li data-requirement="special">1 special character</li>
        </ul>
      </div>

      <form action="/account/update/password" method="post" class="password-form">
        <input type="hidden" name="_csrf" value="<%= csrfToken %>">
        <input type="hidden" name="account_id" value="<%= locals.accountData.account_id %>">
        
        <div class="form-group">
          <label for="current_password" class="form-label">Current Password</label>
          <div class="password-input-container">
            <input 
              type="password" 
              id="current_password" 
              name="current_password" 
              class="form-input"
              required
              autocomplete="current-password"
            >
            <button 
              type="button" 
              class="password-toggle"
              aria-label="Show current password"
              aria-controls="current_password"
            >
              <i class="fas fa-eye"></i>
            </button>
          </div>
        </div>

        <div class="form-group">
          <label for="new_password" class="form-label">New Password</label>
          <div class="password-input-container">
            <input 
              type="password" 
              id="new_password" 
              name="new_password" 
              class="form-input"
              required
              pattern="(?=.*\d)(?=.*[A-Z])(?=.*[^a-zA-Z0-9]).{12,}"
              autocomplete="new-password"
              aria-describedby="passwordRequirements"
            >
            <button 
              type="button" 
              class="password-toggle"
              aria-label="Show new password"
              aria-controls="new_password"
            >
              <i class="fas fa-eye"></i>
            </button>
          </div>
        </div>

        <div class="form-group">
          <label for="confirm_password" class="form-label">Confirm New Password</label>
          <div class="password-input-container">
            <input 
              type="password" 
              id="confirm_password" 
              name="confirm_password" 
              class="form-input"
              required
              autocomplete="new-password"
            >
          </div>
        </div>

        <button type="submit" class="btn btn-primary">Change Password</button>
      </form>
    </section>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Password toggle functionality
  document.querySelectorAll('.password-toggle').forEach(toggle => {
    toggle.addEventListener('click', function() {
      const inputId = this.getAttribute('aria-controls');
      const input = document.getElementById(inputId);
      const type = input.getAttribute('type') === 'password' ? 'text' : 'password';
      
      input.setAttribute('type', type);
      this.setAttribute('aria-label', 
        type === 'password' ? 'Show password' : 'Hide password');
      this.innerHTML = type === 'password' ? '<i class="fas fa-eye"></i>' : '<i class="fas fa-eye-slash"></i>';
    });
  });

  // Real-time password validation
  const newPassword = document.getElementById('new_password');
  const confirmPassword = document.getElementById('confirm_password');
  const requirements = {
    length: document.querySelector('[data-requirement="length"]'),
    uppercase: document.querySelector('[data-requirement="uppercase"]'),
    number: document.querySelector('[data-requirement="number"]'),
    special: document.querySelector('[data-requirement="special"]')
  };

  if (newPassword) {
    newPassword.addEventListener('input', function() {
      const value = this.value;
      requirements.length.classList.toggle('valid', value.length >= 12);
      requirements.uppercase.classList.toggle('valid', /[A-Z]/.test(value));
      requirements.number.classList.toggle('valid', /\d/.test(value));
      requirements.special.classList.toggle('valid', /[^A-Za-z0-9]/.test(value));
      
      // Check password match
      if (confirmPassword.value.length > 0) {
        confirmPassword.setCustomValidity(
          value === confirmPassword.value ? '' : 'Passwords must match'
        );
      }
    });

    confirmPassword.addEventListener('input', function() {
      this.setCustomValidity(
        this.value === newPassword.value ? '' : 'Passwords must match'
      );
    });
  }
});
</script>

<style>
.account-update-container {
  max-width: 800px;
  margin: 2rem auto;
  padding: 2rem;
  background: white;
  border-radius: 8px;
  box-shadow: 0 2px 10px rgba(0,0,0,0.1);
}

.account-header {
  margin-bottom: 2rem;
  text-align: center;
}

.welcome-message {
  color: var(--primary-color);
  font-size: 1.2rem;
  margin-top: 0.5rem;
}

.account-sections {
  display: grid;
  gap: 2rem;
}

.update-section {
  padding: 1.5rem;
  background: #f9f9f9;
  border-radius: 8px;
}

.update-section h2 {
  margin-top: 0;
  color: var(--primary-color);
  font-size: 1.5rem;
}

.form-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 1rem;
  margin-bottom: 1.5rem;
}

.form-group {
  margin-bottom: 1rem;
}

.form-label {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: 500;
}

.form-input {
  width: 100%;
  padding: 0.75rem;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-size: 1rem;
}

.password-input-container {
  position: relative;
}

.password-toggle {
  position: absolute;
  right: 10px;
  top: 50%;
  transform: translateY(-50%);
  background: none;
  border: none;
  cursor: pointer;
  color: #666;
}

.password-requirements {
  list-style: none;
  padding-left: 1.5rem;
  margin: 1rem 0;
}

.password-requirements li {
  position: relative;
  margin-bottom: 0.25rem;
}

.password-requirements li:before {
  content: "✗";
  position: absolute;
  left: -1.5rem;
  color: #dc3545;
}

.password-requirements li.valid:before {
  content: "✓";
  color: #28a745;
}

.btn-primary {
  padding: 0.75rem 1.5rem;
  background-color: var(--primary-color);
  color: white;
  border: none;
  border-radius: 4px;
  font-size: 1rem;
  cursor: pointer;
}

.alert-danger {
  color: #721c24;
  background-color: #f8d7da;
  border-color: #f5c6cb;
  padding: 0.75rem 1.25rem;
  margin-bottom: 1rem;
  border: 1px solid transparent;
  border-radius: 0.25rem;
}

@media (max-width: 600px) {
  .account-sections {
    grid-template-columns: 1fr;
  }
  
  .form-grid {
    grid-template-columns: 1fr;
  }
}
</style>