<div class="register-container">
  <% if (title) { %>
    <h1 class="register-heading"><%= title %></h1>
  <% } %>

  <!-- Flash Messages -->
  <%- include('../partials/flash-messages') %>

  <!-- Error Display -->
  <% if (errors && errors.array().length > 0) { %>
    <div class="alert alert-danger" role="alert" aria-live="assertive">
      <h2 class="h4">Please correct the following:</h2>
      <ul class="mb-0">
        <% errors.array().forEach(error => { %>
          <li><%= error.msg %></li>
        <% }) %>
      </ul>
    </div>
  <% } %>

  <form id="registerForm" 
        action="/account/register" 
        method="post" 
        class="register-form"
        novalidate>
    
    <!-- Name Fields -->
    <div class="form-row">
      <div class="form-group">
        <label for="account_firstname" class="form-label">First Name</label>
        <input
          type="text"
          id="account_firstname"
          name="account_firstname"
          class="form-input"
          value="<%= locals.account_firstname ? account_firstname : '' %>"
          required
          pattern="[A-Za-zÀ-ÿ\- ]{2,}"
          title="Please enter only letters (2+ characters)"
          autocomplete="given-name"
          aria-describedby="firstNameHelp"
        />
        <small id="firstNameHelp" class="form-text">Your legal first name</small>
      </div>

      <div class="form-group">
        <label for="account_lastname" class="form-label">Last Name</label>
        <input
          type="text"
          id="account_lastname"
          name="account_lastname"
          class="form-input"
          value="<%= locals.account_lastname ? account_lastname : '' %>"
          required
          pattern="[A-Za-zÀ-ÿ\- ]{2,}"
          title="Please enter only letters (2+ characters)"
          autocomplete="family-name"
          aria-describedby="lastNameHelp"
        />
        <small id="lastNameHelp" class="form-text">Your legal last name</small>
      </div>
    </div>

    <!-- Email Field -->
    <div class="form-group">
      <label for="account_email" class="form-label">Email Address</label>
      <input
        type="email"
        id="account_email"
        name="account_email"
        class="form-input"
        value="<%= locals.account_email ? account_email : '' %>"
        required
        autocomplete="email"
        aria-describedby="emailHelp"
      />
      <small id="emailHelp" class="form-text">We'll never share your email</small>
    </div>

    <!-- Password Field -->
    <div class="form-group">
      <label for="account_password" class="form-label">Password</label>
      <div class="password-input-container">
        <input
          type="password"
          id="account_password"
          name="account_password"
          class="form-input"
          required
          autocomplete="new-password"
          pattern="(?=.*\d)(?=.*[A-Z])(?=.*[^a-zA-Z0-9]).{12,}"
          aria-describedby="passwordHelp passwordRequirements"
          minlength="12"
        />
        <button type="button" 
                id="showPassword" 
                class="password-toggle"
                aria-label="Show password"
                aria-controls="account_password">
          <i class="fas fa-eye"></i>
        </button>
      </div>
      
      <!-- Password Requirements -->
      <div id="passwordRequirements" class="password-requirements">
        <p class="requirements-title">Password must contain:</p>
        <ul aria-live="polite">
          <li data-requirement="length">At least 12 characters</li>
          <li data-requirement="uppercase">1 uppercase letter</li>
          <li data-requirement="number">1 number</li>
          <li data-requirement="special">1 special character</li>
          <li data-requirement="match" id="passwordMatch" style="display:none">Passwords must match</li>
        </ul>
      </div>
    </div>

    <!-- Confirm Password Field -->
    <div class="form-group">
      <label for="account_confirm_password" class="form-label">Confirm Password</label>
      <div class="password-input-container">
        <input
          type="password"
          id="account_confirm_password"
          name="account_confirm_password"
          class="form-input"
          required
          autocomplete="new-password"
          aria-describedby="confirmPasswordHelp"
          minlength="12"
        />
      </div>
      <small id="confirmPasswordHelp" class="form-text">Re-enter your password</small>
    </div>

    <!-- Terms Agreement -->
    <div class="form-group form-check">
      <input type="checkbox" id="terms_agreement" name="terms_agreement" class="form-check-input" required>
      <label for="terms_agreement" class="form-check-label">
        I agree to the <a href="/terms" target="_blank">Terms of Service</a> and 
        <a href="/privacy" target="_blank">Privacy Policy</a>
      </label>
    </div>

    <!-- Submit Button -->
    <button type="submit" class="btn btn-primary btn-block">Create Account</button>

    <!-- CSRF Protection -->
    <input type="hidden" name="_csrf" value="<%= csrfToken %>">
  </form>

  <div class="auth-links">
    <p>Already have an account? <a href="/account/login">Sign in</a></p>
  </div>
</div>

<!-- Client-side Validation Script -->
<script>
document.addEventListener('DOMContentLoaded', function() {
  const form = document.getElementById('registerForm');
  const passwordInput = document.getElementById('account_password');
  const confirmPasswordInput = document.getElementById('account_confirm_password');
  const showPasswordBtn = document.getElementById('showPassword');
  const requirements = {
    length: document.querySelector('[data-requirement="length"]'),
    uppercase: document.querySelector('[data-requirement="uppercase"]'),
    number: document.querySelector('[data-requirement="number"]'),
    special: document.querySelector('[data-requirement="special"]'),
    match: document.getElementById('passwordMatch')
  };

  // Toggle password visibility
  showPasswordBtn.addEventListener('click', function() {
    const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
    passwordInput.setAttribute('type', type);
    this.setAttribute('aria-label', 
      type === 'password' ? 'Show password' : 'Hide password');
    this.innerHTML = type === 'password' ? '<i class="fas fa-eye"></i>' : '<i class="fas fa-eye-slash"></i>';
  });

  // Real-time password validation
  function validatePassword() {
    const value = passwordInput.value;
    requirements.length.classList.toggle('valid', value.length >= 12);
    requirements.uppercase.classList.toggle('valid', /[A-Z]/.test(value));
    requirements.number.classList.toggle('valid', /\d/.test(value));
    requirements.special.classList.toggle('valid', /[^A-Za-z0-9]/.test(value));
    
    // Check password match
    if (confirmPasswordInput.value.length > 0) {
      const passwordsMatch = passwordInput.value === confirmPasswordInput.value;
      requirements.match.style.display = 'block';
      requirements.match.classList.toggle('valid', passwordsMatch);
      confirmPasswordInput.setCustomValidity(passwordsMatch ? '' : 'Passwords must match');
    } else {
      requirements.match.style.display = 'none';
    }
  }

  passwordInput.addEventListener('input', validatePassword);
  confirmPasswordInput.addEventListener('input', validatePassword);

  // Form submission validation
  form.addEventListener('submit', function(e) {
    if (!form.checkValidity()) {
      e.preventDefault();
      // Focus on first invalid field
      const invalidField = form.querySelector(':invalid');
      if (invalidField) {
        invalidField.focus();
      }
    }
  });
});
</script>

<style>
.register-container {
  max-width: 600px;
  margin: 2rem auto;
  padding: 2rem;
  background: white;
  border-radius: 8px;
  box-shadow: 0 2px 10px rgba(0,0,0,0.1);
}

.register-heading {
  text-align: center;
  margin-bottom: 1.5rem;
  color: var(--primary-color);
}

.form-row {
  display: flex;
  gap: 1rem;
  margin-bottom: 1rem;
}

.form-row .form-group {
  flex: 1;
}

.form-group {
  margin-bottom: 1.5rem;
}

.form-label {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: 500;
}

.form-input {
  width: 100%;
  padding: 0.75rem;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-size: 1rem;
}

.password-input-container {
  position: relative;
}

.password-toggle {
  position: absolute;
  right: 10px;
  top: 50%;
  transform: translateY(-50%);
  background: none;
  border: none;
  cursor: pointer;
  color: #666;
}

.password-requirements {
  margin-top: 0.5rem;
  font-size: 0.875rem;
  color: #666;
}

.password-requirements ul {
  list-style: none;
  padding-left: 1.5rem;
  margin: 0.5rem 0 0;
}

.password-requirements li {
  position: relative;
  margin-bottom: 0.25rem;
}

.password-requirements li:before {
  content: "✗";
  position: absolute;
  left: -1.5rem;
  color: #dc3545;
}

.password-requirements li.valid:before {
  content: "✓";
  color: #28a745;
}

.form-check {
  display: flex;
  align-items: center;
  margin-bottom: 1.5rem;
}

.form-check-input {
  margin-right: 0.5rem;
}

.auth-links {
  margin-top: 1.5rem;
  text-align: center;
  font-size: 0.9rem;
}

.auth-links a {
  color: var(--primary-color);
  text-decoration: none;
}

.btn-primary {
  width: 100%;
  padding: 0.75rem;
  background-color: var(--primary-color);
  color: white;
  border: none;
  border-radius: 4px;
  font-size: 1rem;
  cursor: pointer;
}

.alert-danger {
  color: #721c24;
  background-color: #f8d7da;
  border-color: #f5c6cb;
  padding: 0.75rem 1.25rem;
  margin-bottom: 1rem;
  border: 1px solid transparent;
  border-radius: 0.25rem;
}

@media (max-width: 576px) {
  .form-row {
    flex-direction: column;
    gap: 0;
  }
}
</style>